<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="sim" default="false" />
  <arg name="debug" default="false" />

  <!-- Args to start different capabilities -->
  <arg name="start_all" default="false" />
  <arg name="perception" default="$(arg start_all)" />
  <arg name="arm" default="$(arg start_all)" />
  <arg name="people" default="$(arg start_all)" />
  <arg name="sound" default="$(arg start_all)" />
  <arg name="speech" default="$(arg start_all)" />
  <arg name="task_executor" default="$(arg start_all)" />
  <arg name="arbitrator" default="$(arg task_executor)" />
  <arg name="local_strategy" default="$(arg task_executor)" />

  <!-- Common args -->
  <arg name="cloud_topic" value="/head_camera/depth_registered/points" />
  <arg name="grasp_classifier_file" value="random_forest.pkl" />
  <arg name="segmentation_config" value="$(find task_executor)/config/zones.yaml" />
  <arg name="task_config" value="$(find task_executor)/config/tasks.yaml" />

  <!-- Simulation vs. non simulation args -->
  <arg name="data_config" value="$(find task_executor)/config/simulation.yaml" if="$(arg sim)" />
  <arg name="data_config" value="$(find task_executor)/config/robot.yaml" unless="$(arg sim)" />

  <!-- Other args -->

  <!-- Perception -->
  <group if="$(arg perception)">
    <!-- Verification of the grasp -->
    <node name="grasp_verifier" pkg="candy_manipulation" type="grasp_verifier.py" />

    <!-- The bag pose detector -->
    <node name="bag_pose_from_person_server" pkg="bagposefromperson" type="bag_pose.py" />
  </group>

  <!-- Arm -->
  <group if="$(arg arm)">
    <node name="candy_manipulator" pkg="candy_manipulation" type="candy_manipulator" output="screen" />

    <node name="playback_primitive" pkg="data_recorder" type="playback_executor.py" output="screen" />

    <include file="$(find fetch_moveit_config)/launch/move_group.launch">
      <arg name="info" value="true"/>
      <arg name="allow_active_sensing" value="true" />
    </include>
  </group>

  <!-- People Detection -->
  <group if="$(arg people)">
  </group>

  <!-- Sound Play -->
  <group if="$(arg sound)">
    <node name="sound_server" pkg="sound_interface" type="server_node.py" />
  </group>

  <!-- Speech recognition -->
  <group if="$(arg speech)">
    <include file="$(find hotword_detector)/launch/hotword_detector.launch" />
  </group>

  <!-- Local recovery strategy -->
  <include file="$(find local_strategy)/launch/recovery_strategy.launch" if="$(arg local_strategy)">
    <arg name="sim" value="$(arg sim)" />
  </include>

  <!-- Assistance arbitration -->
  <include file="$(find assistance_arbitrator)/launch/arbitrator.launch" if="$(arg arbitrator)">
    <arg name="sim" value="$(arg sim)" />
  </include>

  <!-- Task Execution -->
  <group if="$(arg task_executor)">
    <node name="halloween" pkg="task_executor" type="run_halloween.py" output="screen" />

    <include file="$(find task_executor)/launch/task_executor.launch">
      <arg name="sim" value="$(arg sim)" />
      <arg name="task_config" value="$(arg task_config)" />
      <arg name="data_config" value="$(arg data_config)" />
    </include>

    <!-- Simulation helpers if this is in simulation -->
    <group if="$(arg sim)">
      <!-- Joystick Teleop -->
      <node name="joy_node" pkg="joy" type="joy_node" />
      <node name="teleop" pkg="fetch_teleop" type="joystick_teleop" />

      <!-- Robot Driver -->
      <node name="robot_driver" pkg="simulation_helpers" type="simulated_robot_driver.py" />

      <!-- Diagnostics -->
      <node name="diagnostic_aggregator" pkg="diagnostic_aggregator" type="aggregator_node" args="CPP">
        <rosparam command="load" file="$(find simulation_helpers)/config/analyzers.yaml" />
      </node>

    </group>

  </group>
</launch>
